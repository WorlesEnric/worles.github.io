<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Qihang's site</title>
 <link href="http://localhost:4000/atom.xml" rel="self"/>
 <link href="http://localhost:4000/"/>
 <updated>2024-04-22T20:47:03+08:00</updated>
 <id>http://localhost:4000</id>
 <author>
   <name>Qihang Wang</name>
   <email>worlesenric@gmail.com</email>
 </author>

 
 <entry>
   <title>Finetuning Your LLM - My Workflow</title>
   <link href="http://localhost:4000/2024/04/15/finetunellm"/>
   <updated>2024-04-15T00:00:00+08:00</updated>
   <id>http://localhost:4000/2024/04/15/FinetuneLLM</id>
   <content type="html">
</content>
 </entry>
 
 <entry>
   <title>DL Development Environment 1 &gt; System Installation and Configuration</title>
   <link href="http://localhost:4000/2024/04/14/ubuntuinstallation"/>
   <updated>2024-04-14T00:00:00+08:00</updated>
   <id>http://localhost:4000/2024/04/14/UbuntuInstallation</id>
   <content type="html">&lt;h1 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#os-installation-&quot;&gt;OS Installation &lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#preparing-ubuntu-image-&quot;&gt;Preparing Ubuntu Image &lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#os-configuration&quot;&gt;OS Configuration&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#gpu-related-configuration-&quot;&gt;GPU Related Configuration &lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;os-installation-&quot;&gt;OS Installation &lt;a name=&quot;osinstallation&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;You need:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;A laptop or PC with at least 25GB of storage space.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;A flash drive (12GB or above recommended).&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;preparing-ubuntu-image-&quot;&gt;Preparing Ubuntu Image &lt;a name=&quot;preparation&quot;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Download the image from &lt;a href=&quot;https://ubuntu.com/download/desktop&quot;&gt;here&lt;/a&gt;. We use the Ubuntu 22.04 LTS for this guide.&lt;/p&gt;

&lt;p&gt;Staying consistent to the official tutorial, we use &lt;a href=&quot;https://etcher.balena.io/&quot;&gt;balenaEtcher&lt;/a&gt; to create the bootable USB stick. Do the following on balenaEtcher:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Select your downloaded ISO&lt;/li&gt;
  &lt;li&gt;Choose your USB flash drive&lt;/li&gt;
  &lt;li&gt;Click Flash&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You may need to modify the boot option, for this, you may hold &lt;code&gt;F12&lt;/code&gt; while the computer starts.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Notice: If you encounter the black screen after installed the Ubuntu via &lt;code&gt;try or install ubuntu&lt;/code&gt;. Here is the solution:&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;Press &lt;code&gt;e&lt;/code&gt; to enter the edit mode when the screen shows &lt;code&gt;try or install ubuntu&lt;/code&gt;.&lt;/li&gt;
    &lt;li&gt;Find &lt;code&gt;...quiet splash ---&lt;/code&gt;, delete the &lt;code&gt;---&lt;/code&gt; and add the &lt;code&gt;nomodeset&lt;/code&gt; in front of &lt;code&gt;quiet splash&lt;/code&gt;: &lt;code&gt;...nomodeset quiet splash&lt;/code&gt;.&lt;/li&gt;
    &lt;li&gt;Then press &lt;code&gt;enter&lt;/code&gt;, you should enter the installation interface after several seconds of black wait.&lt;/li&gt;
    &lt;li&gt;If you still encounter the problem after installation. Please do the same when you restart the machine. (remember to boot from your ubuntu disk insdead of the flash disk)&lt;/li&gt;
    &lt;li&gt;If you successfully login, edit &lt;code&gt;/etc/default/grub&lt;/code&gt; with &lt;code&gt;sudo&lt;/code&gt;, find &lt;code&gt;GRUB_CMDLINE_LINUX_DEFAULT=&lt;/code&gt;quiet splash&lt;code&gt;, change it to &lt;/code&gt;GRUB_CMDLINE_LINUX_DEFAULT=&lt;code&gt;quiet splash nomodeset&lt;/code&gt;.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Setting up Ubuntu installation:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Computer name: Name-PC&lt;/li&gt;
  &lt;li&gt;Name: Name&lt;/li&gt;
  &lt;li&gt;User name: name&lt;/li&gt;
  &lt;li&gt;Password:&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;os-configuration&quot;&gt;OS Configuration&lt;/h2&gt;

&lt;p&gt;Ref: &lt;a href=&quot;https://gist.github.com/amir-saniyan/b3d8e06145a8569c0d0e030af6d60bea&quot;&gt;Ubuntu 22.04 for DL&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You may update Ubuntu before further operations:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ sudo apt update
$ sudo apt full-upgrade --yes
$ sudo apt autoremove --yes
$ sudo apt autoclean --yes
$ reboot
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can create a full-update script &lt;code&gt;~/full-update.sh&lt;/code&gt; to pack these operations:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;#!/usr/bin/env bash

if [ &quot;$EUID&quot; -ne 0 ]
  then echo &quot;Error: Please run as root.&quot;
  exit
fi

clear

echo &quot;################################################################################&quot;
echo &quot;Updating list of available packages...&quot;
echo &quot;--------------------------------------------------------------------------------&quot;
apt update
echo &quot;################################################################################&quot;
echo

echo &quot;################################################################################&quot;
echo &quot;Upgrading the system by removing/installing/upgrading packages...&quot;
echo &quot;--------------------------------------------------------------------------------&quot;
apt full-upgrade --yes
echo &quot;################################################################################&quot;
echo

echo &quot;################################################################################&quot;
echo &quot;Removing automatically all unused packages...&quot;
echo &quot;--------------------------------------------------------------------------------&quot;
apt autoremove --yes
echo &quot;################################################################################&quot;
echo

echo &quot;################################################################################&quot;
echo &quot;Clearing out the local repository of retrieved package files...&quot;
echo &quot;--------------------------------------------------------------------------------&quot;
apt autoclean --yes
echo &quot;################################################################################&quot;
echo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install the Chrome web browser by (get the deb file &lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;here&lt;/a&gt;):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ sudo dpkg -i google-chrome-stable_current_amd64.deb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install the developement tools by:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ sudo apt install build-essential pkg-config cmake cmake-qt-gui ninja-build valgrind
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install Python3 and venv by:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ sudo apt install python3 python3-wheel python3-pip python3-venv python3-dev python3-setuptools
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install Git by:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ sudo apt install git
$ git config --global user.name &quot;Name&quot;
$ git config --global user.email &quot;name@domain.com&quot;
$ git config --global core.editor &quot;gedit -s&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;gpu-related-configuration-&quot;&gt;GPU Related Configuration &lt;a name=&quot;GPU&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now it comes to the steps for setting up NVIDIA toolkits. The process here may not align with your situation, check the NVIDIA official toturial whenever there are mistakes.&lt;/p&gt;

&lt;p&gt;Check the display hardware by:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ sudo lshw -C display
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Check CUDA and NVIDIA Driver Compatibilities&lt;/strong&gt; &lt;a href=&quot;https://docs.nvidia.com/deeplearning/cudnn/reference/support-matrix.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Check TensorFlow and CUDA Compatibilities&lt;/strong&gt; &lt;a href=&quot;https://www.tensorflow.org/install/gpu&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://www.tensorflow.org/install/source#gpu&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Check Torch and CUDA Campatibilities&lt;/strong&gt; &lt;a href=&quot;https://github.com/pytorch/pytorch/blob/main/RELEASE.md#release-compatibility-matrix&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here we use CUDA 11.8, install the NVIDIA Driver by:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ sudo apt install nvidia-driver-535
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install the prerequisites:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ sudo apt install linux-headers-$(uname -r)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Download CUDA 11.8 via:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ wget https://developer.download.nvidia.com/compute/cuda/11.8.0/local_installers/cuda_11.8.0_520.61.05_linux.run
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install CUDA 11.8 by (select without driver):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ sudo ./cuda_11.8.0_520.61.05_linux.run --override
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Setting up the environment variables:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;export PATH=$PATH:/usr/local/cuda-11.8/bin
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda-11.8/lib64:/usr/local/cuda-11.8/extras/CUPTI/lib64
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Test by:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ nvidia-smi
$ NVCC -v
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install cuDNN v8.6 for CUDA 11.8. Login and download the deb file &lt;a href=&quot;https://developer.nvidia.com/compute/cudnn/secure/8.6.0/local_installers/11.8/cudnn-local-repo-ubuntu2204-8.6.0.163_1.0-1_amd64.deb&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then install by:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ sudo dpkg -i cudnn-local-repo-ubuntu2204-8.6.0.163_1.0-1_amd64.deb
$ sudo cp /var/cudnn-local-repo-ubuntu2204-8.6.0.163/cudnn-local-FAED14DD-keyring.gpg /usr/share/keyrings/
$ sudo apt update
$ sudo apt install libcudnn8
$ sudo apt install libcudnn8-dev
$ sudo apt install libcudnn8-samples
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then reboot by &lt;code&gt;sudo reboot&lt;/code&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>DL Development Environment 2 &gt; Tools You May Need</title>
   <link href="http://localhost:4000/2024/04/14/softwares"/>
   <updated>2024-04-14T00:00:00+08:00</updated>
   <id>http://localhost:4000/2024/04/14/Softwares</id>
   <content type="html">&lt;h1 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#source-mirrors-&quot;&gt;Source Mirrors &lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#ubuntu-sources-2204-lts-jammy&quot;&gt;Ubuntu Sources (22.04 LTS jammy)&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#pypi&quot;&gt;PyPI&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#docker-ce&quot;&gt;Docker CE&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#dockerhub-mirror&quot;&gt;Dockerhub Mirror&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#proxy-&quot;&gt;Proxy &lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#visual-studio-code-&quot;&gt;Visual Studio Code &lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;source-mirrors-&quot;&gt;Source Mirrors &lt;a name=&quot;mirror&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;For users who experience the low connection qualities on certain software sources, you may consider using the source mirrors. Here we record the operations using Tsinghua Open Source Mirror (TUNA).&lt;/p&gt;

&lt;h3 id=&quot;ubuntu-sources-2204-lts-jammy&quot;&gt;Ubuntu Sources (22.04 LTS jammy)&lt;/h3&gt;

&lt;p&gt;Replace the content of &lt;code&gt;/etc/apt/sources.list&lt;/code&gt; with:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy main restricted universe multiverse
# deb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy main restricted universe multiverse
deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse
# deb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse
deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse
# deb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse

deb http://security.ubuntu.com/ubuntu/ jammy-security main restricted universe multiverse
# deb-src http://security.ubuntu.com/ubuntu/ jammy-security main restricted universe multiverse

# deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-proposed main restricted universe multiverse
# # deb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-proposed main restricted universe multiverse
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;pypi&quot;&gt;PyPI&lt;/h3&gt;

&lt;p&gt;For the temporary usage, you may directly use:
&lt;code&gt;pip install -i https://pypi.tuna.tsinghua.edu.cn/simple some-package&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Set as default, you may use:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;python -m pip install --upgrade pip
# use the below if you cannot upgrade
# python -m pip install -i https://pypi.tuna.tsinghua.edu.cn/simple --upgrade pip
pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;docker-ce&quot;&gt;Docker CE&lt;/h3&gt;

&lt;p&gt;You can automatically install docker via:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;export DOWNLOAD_URL=&quot;http://mirrors.tuna.tsinghua.edu.cn/docker-ce&quot;
# For curl
curl -fsSL https://get.docker.com/ | sh
# for wget
wget -O- https://get.docker.com/ | sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;OR, you can install mannually. The following commands are for Ubuntu, you can change them according to the instructions &lt;a href=&quot;https://mirrors.tuna.tsinghua.edu.cn/help/docker-ce/&quot;&gt;here&lt;/a&gt;. Uninstall the old version (if there is):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do apt-get remove $pkg; done
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then install the dependencies:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;apt-get update
apt-get install ca-certificates curl gnupg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add the repo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;install -m 0755 -d /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
sudo chmod a+r /etc/apt/keyrings/docker.gpg
echo \
  &quot;deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] http://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/ubuntu \
  &quot;$(. /etc/os-release &amp;amp;&amp;amp; echo &quot;$VERSION_CODENAME&quot;)&quot; stable&quot; | \
  tee /etc/apt/sources.list.d/docker.list &amp;gt; /dev/null
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install the docker:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;apt-get update
apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;dockerhub-mirror&quot;&gt;Dockerhub Mirror&lt;/h3&gt;

&lt;p&gt;You can use Aliyun container mirror service to accelerate the &lt;code&gt;docker pull xxx&lt;/code&gt; from docker hub.&lt;/p&gt;

&lt;h2 id=&quot;proxy-&quot;&gt;Proxy &lt;a name=&quot;proxy&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;For the similar reasons, you may want to equip your environment with a proxy. This blog shows the utilization of &lt;a href=&quot;https://github.com/wnlen/clash-for-linux&quot;&gt;clash for linux&lt;/a&gt; for this purpose. You may find other solutions via google.&lt;/p&gt;

&lt;p&gt;Download the clash via:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ git clone https://github.com/wanhebin/clash-for-linux.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Enter the directory &lt;code&gt;cd clash-for-linux&lt;/code&gt; and edit &lt;code&gt;CLASH_URL&lt;/code&gt; by &lt;code&gt;vim .env&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Start the service via:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ sudo bash start.sh
# In a new terminal
$ source /etc/profile.d/clash.sh
$ proxy_on
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You may check if the service is correctly started:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ netstat -tln | grep -E &apos;9090|789.&apos;
tcp        0      0 127.0.0.1:9090          0.0.0.0:*               LISTEN     
tcp6       0      0 :::7890                 :::*                    LISTEN     
tcp6       0      0 :::7891                 :::*                    LISTEN     
tcp6       0      0 :::7892                 :::*   

$ env | grep -E &apos;http_proxy|https_proxy&apos;
http_proxy=http://127.0.0.1:7890
https_proxy=http://127.0.0.1:7890                 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you wang to shutdown or restart (maybe for updating configurations):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;#shuting down
sudo bash shutdown.sh
proxy_off

#restarting
sudo bash restart.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;clash dashboard is by default hosted on &lt;code&gt;http://192.168.0.1:9090/&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;visual-studio-code-&quot;&gt;Visual Studio Code &lt;a name=&quot;vscode&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Download the VSCode client &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;here&lt;/a&gt;, then install via &lt;code&gt;sudo apt install ./&amp;lt;file&amp;gt;.deb&lt;/code&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>DL Development Environment 3 &gt; Libararies You May Need</title>
   <link href="http://localhost:4000/2024/04/14/dllibs"/>
   <updated>2024-04-14T00:00:00+08:00</updated>
   <id>http://localhost:4000/2024/04/14/DLlibs</id>
   <content type="html">&lt;h1 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#ml-libararies-&quot;&gt;ML libararies &lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#pytorch-&quot;&gt;Pytorch &lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#tensorflow--&quot;&gt;Tensorflow  &lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ml-libararies-&quot;&gt;ML libararies &lt;a name=&quot;mllibs&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Prepare the common ML libs (you can also access them via anaconda)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ python3 -m venv ~/venvs/ml
$ source ~/venvs/ml/bin/activate
(ml) $ pip install --upgrade pip setuptools wheel
(ml) $ pip install --upgrade numpy scipy matplotlib ipython jupyter pandas sympy nose
(ml) $ pip install --upgrade scikit-learn scikit-image
(ml) $ deactivate
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;pytorch-&quot;&gt;Pytorch &lt;a name=&quot;pytorch&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Pytorch CPU:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ python3 -m venv ~/venvs/torchcpu
$ source ~/venvs/torchcpu/bin/activate
(torchcpu) $ pip install --upgrade pip setuptools wheel
(torchcpu) $ pip install --upgrade opencv-python opencv-contrib-python
(torchcpu) $ pip install --upgrade torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cpu
(torchcpu) $ deactivate
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pytorch GPU (&lt;strong&gt;ALERT&lt;/strong&gt;: Check the CUDA and cuDNN and NVIDIA drive version Compatibilities &lt;a href=&quot;https://github.com/pytorch/pytorch/blob/main/RELEASE.md#release-compatibility-matrix&quot;&gt;here&lt;/a&gt;, and use the correct downloading name to repalce the ones below):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ python3 -m venv ~/venvs/torchgpu
$ source ~/venvs/torchgpu/bin/activate
(torchgpu) $ pip install --upgrade pip setuptools wheel
(torchgpu) $ pip install --upgrade opencv-python opencv-contrib-python
(torchgpu) $ pip install --upgrade torch torchvision torchaudio
(torchgpu) $ deactivate
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After installation, you may check the availability:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ source ~/venvs/torchgpu/bin/activate
(torchgpu) $ python
&amp;gt;&amp;gt;&amp;gt; import torch
&amp;gt;&amp;gt;&amp;gt; torch.cuda.is_available()
&amp;gt;&amp;gt;&amp;gt; exit()
(torchgpu) $ deactivate
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;tensorflow--&quot;&gt;Tensorflow  &lt;a name=&quot;pytorch&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Tensorflow CPU:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ python3 -m venv ~/venvs/tfcpu
$ source ~/venvs/tfcpu/bin/activate
(tfcpu) $ pip install --upgrade pip setuptools wheel
(tfcpu) $ pip install --upgrade opencv-python opencv-contrib-python
(tfcpu) $ pip install --upgrade tensorflow-cpu tensorboard keras
(tfcpu) $ deactivate
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tensorflow GPU (similar to Pytorch, check the official &lt;a href=&quot;https://www.tensorflow.org/install/gpu&quot;&gt;tutorial&lt;/a&gt;)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ python3 -m venv ~/venvs/tfgpu
$ source ~/venvs/tfgpu/bin/activate
(tfgpu) $ pip install --upgrade pip setuptools wheel
(tfgpu) $ pip install --upgrade opencv-python opencv-contrib-python
(tfgpu) $ pip install --upgrade tensorflow tensorboard keras
(tfgpu) $ deactivate
&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>Large Language Models - Aspects and Methods</title>
   <link href="http://localhost:4000/2024/04/13/introllm"/>
   <updated>2024-04-13T00:00:00+08:00</updated>
   <id>http://localhost:4000/2024/04/13/IntroLLM</id>
   <content type="html">&lt;p&gt;This post is the note for reviewing the development of the Large Language Models (LLMs), for more detailed and rigorous text, please refer to the monographs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; This post should not serve as an introduction text to whom may not be familiar with the deep learning methodologies, since it contains intensive personal opinions, not assured to be correct.&lt;/p&gt;

&lt;h1 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#sequence-to-sequence-learning&quot;&gt;Sequence-to-sequence Learning&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#recurrent-neural-network-and-long-short-term-memory-network&quot;&gt;Recurrent Neural Network and Long Short Term Memory Network&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#encoder-decoder-architecture&quot;&gt;Encoder-Decoder Architecture&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sequence-to-sequence-learning&quot;&gt;Sequence-to-sequence Learning&lt;/h2&gt;

&lt;p&gt;Despite the purpose of giving an introduction of neural language processing, we will start from reviewing  the machine translation (MT) task, for the simplicity  of the ideas – transfrom one sequence of words to another sequence of words (in some other language).  Note that in the original &lt;a href=&quot;https://arxiv.org/pdf/1409.3215.pdf&quot;&gt;paper&lt;/a&gt; written by Ilya et al., the sequence to sequence learning could be a quite generalizable concept, below are several examples of sequences:&lt;/p&gt;

&lt;p&gt;&lt;img style=&quot;display: block;&quot; class=&quot;img-fluid&quot; src=&quot;https://i.imgur.com/ZVfrUta.png&quot; alt=&quot;seq2seq.&quot; /&gt;&lt;/p&gt;
&lt;p class=&quot;small&quot;&gt;&quot;Examples of sequences&quot; by seq2seq ICML 17&apos; tutorial&lt;/p&gt;

&lt;p&gt;In my opinion, the motivation for developing the modern sequence to sequence learning methods is driven by the following two problems:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The traditional ML methods rely on the consistent input dimensions. That is to say, the model only deals with the inputs that share a constant shape.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Given the training pairs (each pair contains two sequences usually sampled from two domains), the task is essentially to match the distribution of the former to the latter. How do we model, evaluate or optimize the process?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first problem drives the development of recurrent neural network (RNN), while the second problem drives the architecture design of the moderm seq2seq learning models. We now briefly introduce the three important models to support the further discussion, they are RNN, LSTM, and self-attention.&lt;/p&gt;

&lt;h3 id=&quot;recurrent-neural-network-and-long-short-term-memory-network&quot;&gt;Recurrent Neural Network and Long Short Term Memory Network&lt;/h3&gt;

&lt;p&gt;We would give a short introduction of the model structures and optimization techniques, the main focus of this section remains to be the discussion in the context of sequence-to-sequence learning.&lt;/p&gt;

&lt;p&gt;In short, Recurrent Neural Network (RNN) is a kind of NN architectures in which the model computation graph is directed cyclic graph, while the Long Short Term Memory (LSTM) Network is a more complex version of the core network of RNN. Though sound intuitive, RNNs are proven to be powerful in many ways, e.g., &lt;a href=&quot;https://binds.cs.umass.edu/papers/1995_Siegelmann_Science.pdf&quot;&gt;RNNs are Turing Complete&lt;/a&gt;, &lt;a href=&quot;http://www.vetta.org/documents/Machine_Super_Intelligence.pdf&quot;&gt;RNNs are nearly intelligence-equivalent by approaching the asymptotic limit in text compression&lt;/a&gt;. To make the following introduction non-trivial, we consider the predicting-next-character task, where the model is provided a sequence of characters and is required to predict the next character in the end of the sequence. (Note: The discussion here are mainly derived from the Ph.D &lt;a href=&quot;http://www.cs.utoronto.ca/~ilya/pubs/ilya_sutskever_phd_thesis.pdf&quot;&gt;thesis&lt;/a&gt; of Ilya Sutskever).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;RNN Formulation&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;There are two perspectives on RNN, view it as a single network whose computation graph is cyclic, or view it as a super deep neural network with shared weights among the blocks (unrolled view).&lt;/p&gt;

&lt;p&gt;&lt;img style=&quot;display: block;&quot; class=&quot;img-fluid&quot; src=&quot;https://i.imgur.com/ELw9Iu9.png&quot; alt=&quot;RNN.&quot; /&gt;&lt;/p&gt;
&lt;p class=&quot;small&quot;&gt;&quot;An unrolled RNN&quot; by colah&apos;s blog&lt;/p&gt;

&lt;p&gt;My apology for the inconsistency, but we are going to use a slightly different notation from the figure. Let $i_t$ be the input at t-th moment, and $o_t$ be the output at t-th moment. Aparently RNN utilizes a hidden representation of the data, denoted by $h_t$. Now we define the input-output map as:&lt;/p&gt;

\[o_t = g(h^o_t) \\
h^o_t = W_{oh}h_t + b_o \\
h_t = f(h^i_t) \\
h^i_t = W_{hi}i_t + W_{hh}h_{t-1} + b_h\]

&lt;p&gt;If you are familiar with the feed forward network, these are just two dense layers connected by the corresponding activation functions. The only difference is that the input layer takes the last moment’s state as part of the input, i.e., a combination of the input and the hidden state.&lt;/p&gt;

&lt;p&gt;Before we discuss the LSTM network, we take a glance at the ackpropagation through time algorithm (BPTT). We first define the training loss function of RNN as the cumulative loss over time:&lt;/p&gt;

\[\mathcal{L}(o, y) = \sum_{t=1}^T \mathcal{l}_t(o_t, y_t)\]

&lt;p&gt;Let’s calculate the partial derivative of the loss over $W_{hi}$ and $W_{hh}$, since the calculation w.r.t $W_{oh}$ is straight forward. We have the following:&lt;/p&gt;

\[\frac{\partial \mathcal{L}}{\partial W_{hh}} = \sum_{t=1}^T \frac{\partial \mathcal{l}_t}{\partial W_{hh}} =  \sum_{t=1}^T \frac{\partial \mathcal{l}_t}{\partial o_t}\frac{\partial o_t}{\partial h^o_t}W_{oh}\frac{\partial h_t}{\partial h^i_t}\frac{\partial h^i_t}{\partial W_{hh}} \\
\frac{\partial \mathcal{L}}{\partial W_{hi}} = \sum_{t=1}^T \frac{\partial \mathcal{l}_t}{\partial W_{hi}} =  \sum_{t=1}^T \frac{\partial \mathcal{l}_t}{\partial o_t}\frac{\partial o_t}{\partial h^o_t}W_{oh}\frac{\partial h_t}{\partial h^i_t}\frac{\partial h^i_t}{\partial W_{hi}}\]

&lt;p&gt;Note here you cannot directly calculate that $\frac{\partial h^i_t}{\partial W_{hh}}=h_{t-1}$ since $h_{t-1} = h_{t-1}(\cdot, W_{hh})$, that’s because $W_{hh}$ is shared across the whole sequence. Instead, we apply the chain rule on the partial derivative of the multiplication $W_{hh}h^{t-1}$, we have:&lt;/p&gt;

&lt;p&gt;\(\frac{\partial h_t}{\partial W_{hh}}=\frac{\partial h_t}{\partial h^i_t}(h_{t-1}+W_{hh}\frac{\partial h_{t-1}}{\partial W_{hh}})=\frac{\partial h_t}{\partial h^i_t}(h_{t-1}+W_{hh}(\frac{\partial h_{t-1}}{\partial h^i_{t-1}}(h_{t-2}+W_{hh}\frac{\partial h_{t-2}}{\partial W_{hh}}))))= ...\)
Following the chain rule, we obtain the following:
\(\frac{\partial h_t}{\partial W_{hh}} = \sum_{j=0}^{t-1} \left(\prod_{k=0}^{j}\frac{\partial h_{t-k}}{\partial h^i_{t-k}}W_{hh}\right)h_{t-j-1}\)
The above computation intuitively not stable, since the high order matrix multiplication is introduced. The resulted training process would be in face of potential gradient explosion and gradient vanishing. A straight forward solution is to truncate the historical computation with a relatively short window, and $j$ in the formula would start from $t-w$, where $w$ is the window size. Apparently we lose the long-term learning ability immediately, and that’s where the LSTM network helps. You may have noticed that one of the most apparent problems of vanila RNN is that it encodes all the historical (and any potential future) information into one matrix, which may align with the intuition of our observations on the humans, yet failed to be effectively trained with gradient descent.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Note: You can try to enhance RNN to mitigate these problems, sometimes it’s just a problem of imagination.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;LSTM network tries to solve this problem with an architecture that splits the knowledge representation into two parts: The hidden state $h$ and the memory $C$. The good thing about $C$ is $\frac{\partial C_t}{\partial C_{t-1}}=1$. How would this help? Let’s look at RNN and BPTT in an abstract view. Say, we regard the recurrent network as extracting a knowledge representation $W$ from data. So what we need to do is to define an interface of the knowledge representation $h$, a data to interface transformation $i$, and a interface to data transformation $o$. So the learning process could be defined as:
\(\min \mathbb{E}_{x,y\sim P(x,y)}[\mathcal{L}(o(x), y)]\\
o(x)=o(h(i(x),W))\)
This looks like any ML objectives, for the data structure of sequences, we model the data as $x=[x_1, x_2, …x_T]$, then for RNN, we could process the data segment by segment. Now $i(x)$ is just any neural layer operation $\phi_i (W_ix+b_i)$. The point is that we model $h$ as $h = [h_1, h_2, … h_t]$, while $h_t=W_{hh}h_{t-1}+W_{ih}x_t+b_h=W[h_{t-1}, x_t, 1]$, and $o=\phi_o(h)$, then we get the formulation of RNN. The gradient calculation follows:
\(\frac{\partial \mathcal{L}}{\partial W} = \frac{1}{T}\sum_{t=1}^T \frac{\partial \mathcal{L_t}}{\partial W} = \frac{1}{T}\sum_{t=1}^T \frac{\partial \mathcal{L_t}}{\partial o_t}\frac{\partial o_t}{\partial h_t}\sum_{k=1}^t \prod_{j=k+1}^t\left(\frac{\partial h_j}{\partial h_{j-1}}\right)\frac{\partial h_k}{\partial W}\)
&lt;a href=&quot;https://proceedings.mlr.press/v28/pascanu13.html&quot;&gt;“On the difficulty of training recurrent neural networks”&lt;/a&gt; pointed out that, for some constant $\gamma$:
\(\prod_{j=k+1}^t\frac{\partial h_j}{\partial h_{j-1}} = \prod_{j=k+1}^t diag(\frac{\partial h_j}{\partial h^i_{j-1}})\frac{\partial h^i_{j-1}}{\partial h_{j-1}}\approx 
\left\{ \begin{array}{rcl}
&amp;amp; 0\quad \text{for }max(eigen(diag))&amp;lt;\frac{1}{\gamma} \\
&amp;amp; \infty\quad \text{for }max(eigen(diag))&amp;gt;\frac{1}{\gamma}
\end{array}\right.\)&lt;/p&gt;

&lt;p&gt;The interesting part is that now we can see that the forward calculation already involved with the $W_{hh}^t$. Of course if we model $i(x)$ as a direct map from $x$ to $h$, the problem is solved, but imagin how big the space of $x$ is, for example $x$ represents an arbitrary sentence written in English. So for now we still model $x$ as a sequence decomposition $[x_1, x_2, …x_T]$, and see if there are better modelling for $h$. Now let’s take a look at LSTM network.&lt;/p&gt;

&lt;p&gt;&lt;img style=&quot;display: block;&quot; class=&quot;img-fluid&quot; src=&quot;https://colah.github.io/posts/2015-08-Understanding-LSTMs/img/LSTM3-chain.png&quot; alt=&quot;LSTM.&quot; /&gt;&lt;/p&gt;
&lt;p class=&quot;small&quot;&gt;&quot;LSTM network&quot; by colah&apos;s blog&lt;/p&gt;

&lt;p&gt;This needs a few explanations, so the upper horizontal line in the figure denotes the memory $C$ and the lower horizontal line denotes the hidden state $h$. The calculation follows (from the left vertical line to the right):&lt;/p&gt;

\[A_t = \sigma(W_A[h_{t-1},x_t]+b_A)\\
B_t = \sigma(W_B[h_{t-1},x_t]+b_B)\\
\hat{C}_t=tanh(W_C[h_{t-1},x_t]+b_C)\\
C_t = A_t\odot C_{t-1}+B_t\odot \hat{C}_t\\
D_t = \sigma(W_D[h_{t-1},x_t]+b_D)\\
h_t = D_t\odot tanh(C_t)\]

&lt;p&gt;where $\odot$ denotes the hadamard product $A\odot B_{ij}=A_{ij}B_{ij}$. The terminology “gate” in most of the introduction of LSTM denotes the sigmoid activation, since the resulted vector would serve as a mask with values near 0 or near 1. In the origin form of LSTM network, $A_t$ is set to be $A_{i}=1, \forall i$, thus we have $\frac{\partial C_t}{\partial C_{t-1}}=I$. Here the variant uses a learnt gate (called “forget gate”) to control the memory, the gate would clear some of the values in the memory. So we can initialize $b_A$ as near 1 and then the network is trained to construct forget gate. Now the architecture seems a little bit complicate, we can use the gated recurrent unit (GRU) to simplify the process (practically, GRU saves memory usage):&lt;/p&gt;

\[A_t = \sigma(W_A[h_{t-1},x_t]+b_A)\\
B_t = \sigma(W_B[h_{t-1},x_t]+b_B)\\
C_t=tanh(W_C[A_t\odot h_{t-1},x_t]+b_C)\\
h_t = (\mathbf{1}-B_t)\odot h_{t-1} + B_t\odot C_t\]

&lt;p&gt;Now we’ve come to a critical point, before we go any further, think for a minute: how can we improve those models in every possible ways?&lt;/p&gt;

&lt;h3 id=&quot;encoder-decoder-architecture&quot;&gt;Encoder-Decoder Architecture&lt;/h3&gt;

&lt;p&gt;Recall that our goal is to model the sequence prediction problem, &lt;a href=&quot;https://arxiv.org/pdf/1409.3215.pdf&quot;&gt;“Sequence to Sequence Learning
with Neural Networks”&lt;/a&gt; proposes the sequence-to-sequence learning with LSTM network.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Revisiting Foundamental Mathematics in Machine Learning</title>
   <link href="http://localhost:4000/2024/04/10/fundmentalmath"/>
   <updated>2024-04-10T00:00:00+08:00</updated>
   <id>http://localhost:4000/2024/04/10/fundmentalMath</id>
   <content type="html">&lt;p&gt;This post is the note for reviewing the fundamental mathematics in machine learning, especially, deep learning area. We will briefly revisit the basic concepts and useful tools in the analysis of ML algorithms.&lt;/p&gt;

&lt;p&gt;Here are some excellent materials you may find helpful:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cis.upenn.edu/~jean/math-deep.pdf&quot;&gt;Algebra, Topology, Differential Calculus, and Optimization Theory For Computer Science and Machine Learning&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.math.uwaterloo.ca/~hwolkowi/matrixcookbook.pdf&quot;&gt;The matrix cookbook&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://link.springer.com/book/10.1007/978-1-4614-1099-7&quot;&gt;Matrix theory- Basic Results and Techniques&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In fact, most of the contents in this post derive from [1].&lt;/p&gt;

&lt;h1 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#preliminaries&quot;&gt;Preliminaries&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#matrices-and-linear-algebra&quot;&gt;Matrices and Linear Algebra&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#curves-scalar-fields-and-gradients&quot;&gt;Curves, Scalar Fields, and Gradients&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;preliminaries&quot;&gt;Preliminaries&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This post assumes you have the preliminary knowledge of simple calculus in univariate case and linear algebra. Here provides some concepts which help us see the things in an abstract way (meaning that we then know where can or cannot we generalize our analysis to).&lt;/p&gt;

&lt;h3 id=&quot;matrices-and-linear-algebra&quot;&gt;Matrices and Linear Algebra&lt;/h3&gt;

&lt;p&gt;Before we proceed, the matrices are useful tools in every aspect in practice. Intuitively, matrices denote the linear mappings between two vector spaces (with appropriate basis defined). You would definitely use the matrix notations when dealing with the problems involve with transformations between vector space, and the perspective of vector space would definitely help when memorizing the concepts.&lt;/p&gt;

&lt;p&gt;A set $V$ is called a &lt;strong&gt;vector space&lt;/strong&gt; over a field $\mathbb{F}$ if the following hold:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;$u+v$, $u,v\in V$ and $cv$, $c\in\mathbb{F}$, $v\in V$ are defined.&lt;/li&gt;
  &lt;li&gt;$u+v \in V$ for all $u, v \in V$.&lt;/li&gt;
  &lt;li&gt;$c v \in V$ for all $c \in \mathbb{F}$ and $v \in V$.&lt;/li&gt;
  &lt;li&gt;$u+v=v+u$ for all $u, v \in V$.&lt;/li&gt;
  &lt;li&gt;$(u+v)+w=u+(v+w)$ for all $u, v, w \in V$.&lt;/li&gt;
  &lt;li&gt;There is an element $0 \in V$ such that $v+0=v$ for all $v \in V$.&lt;/li&gt;
  &lt;li&gt;For each $v \in V$ there is an element $-v \in V$ so that $v+(-v)=0$.&lt;/li&gt;
  &lt;li&gt;$c(u+v)=c u+c v$ for all $c \in \mathbb{F}$ and $u, v \in V$.&lt;/li&gt;
  &lt;li&gt;$(a+b) v=a v+b v$ for all $a, b \in \mathbb{F}$ and $v \in V$.&lt;/li&gt;
  &lt;li&gt;$(a b) v=a(b v)$ for all $a, b \in \mathbb{F}$ and $v \in V$.&lt;/li&gt;
  &lt;li&gt;$1 v=v$ for all $v \in V$.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some examples of vector space are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;$\mathbb{F}_n(x)$, the collections of polynomials over a field $\mathbb{F}$ with degrees at most $n$, w.r.t the ordinary addition and scalar multiplication.&lt;/li&gt;
  &lt;li&gt;$\mathbb{F}^k_n$, the set of all polynomials of degree at most $n$ in $k$ variables.&lt;/li&gt;
  &lt;li&gt;$C[a,b]$, the set of all (real-valued) continuous functions on $[a,b]$.&lt;/li&gt;
  &lt;li&gt;$C’(x)$, the set of all functions of continuous derivatives on $\mathbb{R}$.&lt;/li&gt;
  &lt;li&gt;The set of all even functions.&lt;/li&gt;
  &lt;li&gt;The set of all odd functions.&lt;/li&gt;
  &lt;li&gt;The set of set of all functions $f$ such that $f(0)=0$.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let $S$ be a nonempty subset of a vector space $V$ over a field $\mathbb{F}$. Denote by &lt;strong&gt;Span&lt;/strong&gt;$S$ the collection of all finite linear combinations of the vectors in $S$; that is, Span$S$ consists of all vectors of the form
\(c_1 v_1+c_2 v_2+\cdots+c_t v_t, \quad t=1,2, \ldots, c_i \in \mathbb{F}, v_i \in S,\)&lt;/p&gt;

&lt;p&gt;Note that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Span $S$ is also a vector space.&lt;/li&gt;
  &lt;li&gt;$S$ spans the vector space $V$ if Span$S=V$.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A set $S=\lbrace v_1, v_2, \ldots, v_k\rbrace$ is said to be &lt;strong&gt;linearly independent&lt;/strong&gt; if
\(c_1 v_1+c_2 v_2+\cdots+c_k v_k=0\)
holds only when $c_1=c_2=\cdots=c_k=0$. If there are also nontrivial solutions, i.e., not all $c$ are zero, then $S$ is &lt;strong&gt;linearly dependent&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;A basis of a vector space $V$ is a linearly independent set that spans $V$. The number of elements in a basis of $V$ is called the &lt;strong&gt;dimension&lt;/strong&gt; of $V$, denoted as dim$V$. We write dim$V=0$ if $V=\lbrace 0\rbrace$. We write dim$V=\infty$ if no finite set could span $V$.&lt;/p&gt;

&lt;p&gt;If $\lbrace u_1, u_2, \ldots, u_n\rbrace$ is a basis for a vector space $V$, then every $x$ in $V$ can be uniquely expressed as a linear combination of the basis vectors:
\(x=x_1 u_1+x_2 u_2+\cdots+x_n u_n,\)
where the $x_i\in\mathbb{F}$. The $n$-tuple $\left(x_1, x_2, \ldots, x_n\right)$ is called the &lt;strong&gt;coordinate&lt;/strong&gt; of vector $x$ w.r.t the basis.&lt;/p&gt;

&lt;p&gt;Let $W$ be a subset of a vector space $V$. If $W$ is also a vector space under the addition and scalar multiplication for $V$, then $W$ is called a &lt;strong&gt;subspace&lt;/strong&gt; of $V$. We have $W$ is a subspace iff $W$ is closed under the addition and scalar multiplication.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;sum of subspaces&lt;/strong&gt; $V_1$, $V_2$ is defined as $V_1+V_2=\lbrace v_1+v_2\mid v_1\in V_1, v_2\in V_2\rbrace$. This sum is also a subspace, and also the intersection of $V_1$ and $V_2$ is a subspace. We have $V_1\bigcap V_2\subseteq V_i\subseteq V_1+V_2$. The sum $V_1+V_2$ is called a &lt;strong&gt;direct sum&lt;/strong&gt;, symbolized by $V_1 \oplus V_2$, if $v_1+v_2=0, v_1 \in V_1, v_2 \in V_2 \Rightarrow v_1=v_2=0$. $V_1+V_2$ is a direct sum iff $\dim(V_1+V_2)=\dim V_1 +\dim V_2$. If $\lbrace u_1, \ldots, u_s\rbrace$ is a basis for $V_1$ and $\lbrace v_1, \ldots, v_t\rbrace$ is a basis for $V_2$, then $\lbrace u_1, \ldots, u_s, v_1, \ldots, v_t\rbrace$ is a basis for $V_1 \oplus V_2$.&lt;/p&gt;

&lt;p&gt;To study the properties of the vector spaces, we have the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Let $\lbrace v_1, v_2, \ldots, v_k\rbrace$ be a linearly independent subset of $V$, if $\dim V=n$, then $k\leq n$, and if $k&amp;lt;n$, then there exists a vector $v_{k+1}\in V$ such that $\lbrace v_1, v_2, \ldots, v_{k+1}\rbrace$ is linearly independent.&lt;/li&gt;
  &lt;li&gt;Let $V_1$ and $V_2$ be subspaces of $V$. Then $\dim V_1 + \dim V_2 = \dim (V_1+V_2)+\dim (V_1\bigcap V_2)$.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A &lt;strong&gt;matrix&lt;/strong&gt; $A$ with $m$ rows and $n$ columns is an $m\times n$ rectangular array $(a_{ij})$ whose entries are in some field $\mathbb{F}$. All the $m\times n$ matrices over field $\mathbb{F}$ constitute a vector space $\mathbb{M}_{m\times n}(\mathbb{F})$, whose basis are the matrices with only one entry’s value equals to 1 and 0 for all the other entries. Some basic matrix operations are:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Addition:&lt;/strong&gt; $A+B=(a_{ij}+b_{ij})$&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Multiplication:&lt;/strong&gt; $AB=(a_{i1}b_{1j}+a_{i2}b_{2j}+…+a_{in}b_{nj})$ or in column vectors form: $AB=(Ab_1, Ab_2, …,Ab_n)$&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Transpose:&lt;/strong&gt; $A^T=(a_{ji})$&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conjugate:&lt;/strong&gt; $\bar{A}=(\bar{a}_{ij})$&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conjugate Transpose:&lt;/strong&gt; $A^*=(\bar{a}_{ji})$&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Adjoint:&lt;/strong&gt; $\text{adj}A=((-1)^{j+i}\det A(j\mid i))$&lt;/p&gt;

&lt;p&gt;A square complex matrix $A=\left(a_{i j}\right)$ is said to be&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;diagonal if $a_{i j}=0, i \neq j$&lt;/li&gt;
  &lt;li&gt;upper-triangular if $a_{i j}=0, i&amp;gt;j$&lt;/li&gt;
  &lt;li&gt;symmetric if $A^T=A$&lt;/li&gt;
  &lt;li&gt;orthogonal if $A^T A=A A^T=I$&lt;/li&gt;
  &lt;li&gt;Hermitian if $A^*=A$&lt;/li&gt;
  &lt;li&gt;normal if $A^* A=A A^*$&lt;/li&gt;
  &lt;li&gt;unitary if $A^* A=A A^*=I$&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Partition:&lt;/strong&gt; 
\(A=\left(\begin{array}{ll}
B &amp;amp; C \\
D &amp;amp; E
\end{array}\right)\)
and if the shapes match, we have: 
\(\left(\begin{array}{cc}
A &amp;amp; B \\
0 &amp;amp; C
\end{array}\right)\left(\begin{array}{cc}
X &amp;amp; Y \\
U &amp;amp; V
\end{array}\right)=\left(\begin{array}{cc}
A X+B U &amp;amp; A Y+B V \\
C U &amp;amp; C V
\end{array}\right)\)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Elementary row(column) operations&lt;/strong&gt; are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Interchange two rows(columns).&lt;/li&gt;
  &lt;li&gt;Multiply a row(column) by a nonzero constant.&lt;/li&gt;
  &lt;li&gt;Add a multiple of a row(column) to another row(column).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The elementary matrices are those can be obtained from $I_n$ by one elementary row (column) operation. The elementary operations on the other matrix could be represented by multiplying the elementary matrices. Let $A$ be an $m\times n$ matrix, let $E$ be $m\times m$ elementary matrix and $F$ be $n\times n$ matrix, then $EAF$ denotes the transformation of both row operation of $E$ and the column operation of $F$ on $A$. Then we have the following conclusions about the rank decomposition.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Let $A$ be an $m \times n$ matrix over a field $\mathbb{F}$. Then there exist an $m \times m$ matrix $P$ and an $n \times n$ matrix $Q$, both of which are products of elementary matrices with entries from $\mathbb{F}$, such that 
\(P A Q=\left(\begin{array}{cc}
I_r &amp;amp; 0 \\
0 &amp;amp; 0
\end{array}\right)\)
we have $r=\text{rank}(A)$.&lt;/li&gt;
  &lt;li&gt;Let $A$ be an $m \times n$ (real or complex) matrix of rank $r$. Let $\operatorname{Ker} A$ be the &lt;strong&gt;null space&lt;/strong&gt; of $A$, i.e., $\operatorname{Ker} A={x: A x=0}$. Then $\operatorname{dim} \operatorname{Ker} A=n-r$.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;strong&gt;determinant&lt;/strong&gt; of matrix $A$, $\det A$ or $\mid A\mid$, is a number associated with $A$. Here list two ways of defining the determinant:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Let $p$ be a permutation on ${1,2,…,n}$, we say $p$ is even if ${1,2,…,n}$ could be restored from $p$ in even number of interchanges, odd otherwise. Define $\text{sign}(p)=1$ if $p$ is even and $\text{sign}(p)=-1$ if $p$ is odd. Then we have $\operatorname{det} A=\sum_{p \in S_n} \operatorname{sign}(p) \prod_{t=1}^n a_{t p(t)}$.&lt;/li&gt;
  &lt;li&gt;We can also define the determinant by the Laplace formula as $\operatorname{det} A=\sum_{j=1}^n(-1)^{1+j} a_{1 j} \operatorname{det} A(1 \mid j)$, where $A(1 \mid j)$ is a submatrix of $A$ deleting the $1$-st row and the $j$-th column.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The determinant has the following properties:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The determinant changes sign if two rows(columns) are interchanged.&lt;/li&gt;
  &lt;li&gt;The determinant is unchanged if a constant multiple of one row(column) is added to another row(column).&lt;/li&gt;
  &lt;li&gt;The determinant is a linear function of any row(column) when all the other rows(columns) are held fixed.&lt;/li&gt;
  &lt;li&gt;For $A,B\in\mathbb{M}_n$, we have $\det AB=\det A\det B$.&lt;/li&gt;
  &lt;li&gt;For $A\in\mathbb{M}_n$ and $C\in\mathbb{M}_m$, we have 
\(\left|\begin{array}{ll}
A &amp;amp; B \\
0 &amp;amp; C
\end{array}\right|=\operatorname{det} A \operatorname{det} C\)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A squared matrix is said to be &lt;strong&gt;invertible&lt;/strong&gt;, or &lt;strong&gt;nonsingular&lt;/strong&gt; if there exists a matrix $B$ such that $AB=BA=I$, then $B$ is called the inverse of $A$, $B=A^{-1}$. Define the &lt;strong&gt;adjoint&lt;/strong&gt; of $A$ as $\text{adj}A=((-1)^{j+i}\det A(j\mid i))$, we could also have $A^{-1}=\frac{1}{\operatorname{det} A} \operatorname{adj}(A)$. We could conclude that if $E_1E_2…E_k A=I$, then $A^{-1}=E_1E_2…E_k$, which means we can apply row operations on $(A,I)$, then we obtain $A^{-1}$ from $(I, A^{-1})$.&lt;/p&gt;

&lt;p&gt;Two square matrices $A$ and $B$ are said to be &lt;strong&gt;similar&lt;/strong&gt; if for some invertible matrix $P$, we have $P^{-1}AP=B$.&lt;/p&gt;

&lt;p&gt;The following statements are equal:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;$A$ is invertible, i.e., $A B=B A=I$ for some $B \in \mathbb{M}_n$.&lt;/li&gt;
  &lt;li&gt;$A B=I$ (or $B A=I$ ) for some $B \in \mathbb{M}_n$.&lt;/li&gt;
  &lt;li&gt;$A$ is of rank $n$.&lt;/li&gt;
  &lt;li&gt;A is a product of elementary matrices.&lt;/li&gt;
  &lt;li&gt;$A x=0$ has only the trivial solution $x=0$.$A x=b$ has a unique solution for each $b \in \mathbb{C}^n$.&lt;/li&gt;
  &lt;li&gt;$\operatorname{det} A \neq 0$.&lt;/li&gt;
  &lt;li&gt;The column vectors of $A$ are linearly independent.&lt;/li&gt;
  &lt;li&gt;The row vectors of $A$ are linearly independent.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let $V$ and $W$ be vector spaces over a field $\mathbb{F}$. A map $\mathcal{A}: V \mapsto W$ is called a &lt;strong&gt;linear transformation&lt;/strong&gt; from $V$ to $W$ if for all $u, v \in V, c \in \mathbb{F}$, $\mathcal{A}(u+v)=\mathcal{A}(u)+\mathcal{A}(v)$, and $\mathcal{A}(c v)=c \mathcal{A}(v)$.&lt;/p&gt;

&lt;p&gt;Let $\mathcal{A}$ be a linear transformation from $V$ to $W$. The subset in $W$, $\operatorname{Im}(\mathcal{A})=\lbrace\mathcal{A}(v): v \in V\rbrace$ is a subspace of $W$, called the image of $\mathcal{A}$, and the subset in $V$. $\operatorname{Ker}(\mathcal{A})={v \in V: \mathcal{A}(v)=0 \in W}$ is a subspace of $V$, called the kernel or null space of $\mathcal{A}$. If $V$ is of dimension $n$, then $\operatorname{dim} \operatorname{Im}(\mathcal{A})+\operatorname{dim} \operatorname{Ker}(\mathcal{A})=n$.&lt;/p&gt;

&lt;p&gt;A matrix of shape $m\times n$ is always a linear transformation from $\mathbb{F}^n$ to $\mathbb{F}^m$. A linear transformation can also be implemented by a matrix: $\mathcal{A}(x)=Ax$. Under different bases the matrix $A$ may have different forms, but they are similar.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;“Given a linear transformation on a vector space, it is a central theme of linear algebra to find a basis of the vector space so that the matrix of a linear transformation is as simple as possible, in the sense that the matrix contains more zeros or has a particular structure. In the words of matrices, the given matrix is reduced to a canonical form via similarity”&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;– Matrix theory- Basic Results and Techniques&lt;/p&gt;

&lt;p&gt;Let $\mathcal{A}$ be a linear transformation on a vector space $V$ over $\mathbb{C}$. A nonzero vector $v \in V$ is called an &lt;strong&gt;eigenvector&lt;/strong&gt; of $\mathcal{A}$ belonging to an &lt;strong&gt;eigenvalue&lt;/strong&gt; $\lambda \in \mathbb{C}$ if $\mathcal{A}(v)=\lambda v, \quad v \neq 0$. The eigen vectors belonging to different eigen values are linearly independent.&lt;/p&gt;

&lt;p&gt;If $A$ has $n$ linearly independent eigenvectors belonging to eigen values $\lambda_1, \lambda_2,…\lambda_n$, then $A$, under the basis formed by the corresponding eigenvectors, has a diagonal matrix representation:
\(\left(\begin{array}{cccc}
\lambda_1 &amp;amp; &amp;amp; &amp;amp; 0 \\
&amp;amp; \lambda_2 &amp;amp; &amp;amp; \\
&amp;amp; &amp;amp; \ddots &amp;amp; \\
0 &amp;amp; &amp;amp; &amp;amp; \lambda_n
\end{array}\right)\)
In other words, the eigenvalues of $A$ are those $\lambda\in \mathbb{F}$ such that $\det (\lambda I-A)=0$. The eigenvectors then are the vectors who serve as the bases of converting $\mathcal{A}$ to $A$. Furthermore, suppose $A$ is $n\times n$ complex matrix, the polynomial in $\lambda$: $p_A(\lambda)=\det(\lambda I_n-A)$ is called the characteristic polynomial of $A$, the zeros of the polynomial are the eigenvalues of $A$. It follows that every $n$-square matrix has $n$ (possibly repeatedly) eigenvalues.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;trace&lt;/strong&gt; of an $n$-square matrix $A$ is defined as $\text{tr}(A)=\sum_{i=1}^{n}\lambda_i$.&lt;/p&gt;

&lt;p&gt;It follows that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;$\text{tr}A=\sum_{i=1}^n a_{ii}$&lt;/li&gt;
  &lt;li&gt;$\det A = \prod_{i=1}^n \lambda_i$&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;curves-scalar-fields-and-gradients&quot;&gt;Curves, Scalar Fields, and Gradients&lt;/h3&gt;

&lt;p&gt;The overall goal is to generalize the analysis on the function $f:\mathbb{R}\rightarrow\mathbb{R}$ to $f:\mathbb{R}^m\rightarrow\mathbb{R}^n$. Some useful concepts are:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(Derivative of the univariate scalar-valued function)&lt;/strong&gt; A function is called &lt;em&gt;differentiable&lt;/em&gt; at a point $a$ of its domain, if its domain contains an open interval containing $a$, and the limit:
\(\lim_{h\rightarrow 0}\frac{f(a+h)-f(a)}{h}\)
exists. The $\epsilon-\delta$ definition of the derivative of $f(x)$ w.r.t its input $x$ states, $\forall \epsilon\in\mathbb{R}^+$,  there exists $\delta\in\mathbb{R}^+$, such that, $\forall |h|&amp;lt;\delta$ and $f(a+h)$ is defined, and
\(|L-\frac{f(a+h)-f(a)}{h}|&amp;lt;\epsilon\)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(Curve)&lt;/strong&gt; The curves take the form $f:\mathbb{R}\rightarrow\mathbb{R}^n$. We could use $\mathbf{x}(t)$ to denote the curve with $\mathbf{x}\in \mathbf{R}^n$ and $t\in\mathbb{R}$. The curve is said to be &lt;em&gt;differentiable&lt;/em&gt; if as $\Delta t\rightarrow 0$, we have $\mathbf{x}(t+\Delta t)-\mathbf{x}(t)=\mathbf{x}’(t)\Delta t+\mathcal{O}(\Delta t^2)$. This serves as the definition of the derivative $\mathbf{x}’(t)$:&lt;/p&gt;

\[\frac{d\mathbf{x}}{dt}=\mathbf{x}&apos;(t)=\lim_{\Delta t\rightarrow 0}\frac{\Delta\mathbf{x}}{\Delta t}\]

&lt;p&gt;it also follows that $\frac{d}{dt}(\mathbf{g}\mathbf{h})=\frac{d\mathbf{g}}{dt}\mathbf{h}+\frac{d\mathbf{h}}{dt}\mathbf{g}$. The derivative is also called &lt;em&gt;tangent vector&lt;/em&gt; sometimes. Note that the tangent vector depends on the selection of parameter $t$, which prevents us to obtain an invariant measure of the curve. We could instead study the arc length:&lt;/p&gt;

\[s=\int_{t_0}^t dt&apos;|x&apos;(t&apos;)|\]

&lt;p&gt;moreover, we have $\Delta s=|\Delta x|+\mathcal{O}(|\Delta x|^2)$ (as an aside, $|\cdot|$ here means the length or norm of a vector), we then have $\frac{ds}{dt}=sign(|x’|)$, where $sign(x)$ means that we need to set $x$ to be positive or negative according to whether the direction increase $t$ or not. With $s$ as our invariant parameterisation, we are able to define the induced tangent vector as $\frac{dx}{ds}$, easy to verify that the norm of this tangent vector is always 1. Similarly, the ‘invariance’ induced by the arc-length could be applied into the curvature of the curve (the second order derivative) as $\kappa(x)=\frac{d^2 x}{ds^2}$. Now curves map a scalar parameter to a vector value $x\in\mathbb{R}^n$, the scalar field does the contrary: $\phi:\mathbb{R}^n\rightarrow \mathbb{R}$. Generally we can define the vector field as $\phi:\mathbb{R}^n\rightarrow \mathbb{R}^n$. Consider the scalar field $\phi$, we could access the derivatives by its gradient: 
\(\nabla \phi=\frac{\partial\phi}{\partial x^i}\mathbf{e}^i\)
Basicly we just take derivative of $\phi$ w.r.t every coordinate, and constitute a new vector.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Building my blog</title>
   <link href="http://localhost:4000/2021/04/30/test-post-1"/>
   <updated>2021-04-30T00:00:00+08:00</updated>
   <id>http://localhost:4000/2021/04/30/test-post-1</id>
   <content type="html">&lt;p&gt;Despite there are a lot of ways to build a blog site, I utilized the jeckll academic theme and github pages to reduce the efforts. Find the commands and installation guides below:&lt;/p&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ git clone https://github.com/yak-fumblepack/jekyll-academic.git
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ bundle install
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;building&quot;&gt;Building&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ bundle exec jekyll build
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Use &lt;code&gt;--verbose&lt;/code&gt; if you would like a detailed log.&lt;/p&gt;

&lt;h2 id=&quot;serving&quot;&gt;Serving&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ bundle exec jekyll serve --watch --livereload --incremental
&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 

</feed>